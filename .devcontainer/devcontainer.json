// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python with Pyspark and Delta Lake",
	"dockerComposeFile": "../docker/docker-compose.yml",
	"service": "delta-spark",
	"workspaceFolder": "/workspace",	

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	//"postCreateCommand": "pip3 install --user -r requirements.txt",

	// Configure tool-specific properties.
	"customizations" : {
		"vscode" : {
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
                "ms-python.pylint",
				"ms-python.black-formatter",
                "ms-python.isort",
                "ms-python.debugpy",
                "sonarsource.sonarlint-vscode",
				"ms-toolsai.jupyter",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-slideshow",
				"ms-python.vscode-pylance",
				"ms-toolsai.jupyter-keymap"
			],
            "settings": {
                "editor.formatOnSave": true,
                "files.eol": "\n",
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "/bin/bash",
                        "icon": "terminal-bash"
                    }
                },
                "sonarlint.pathToNodeExecutable": "/root/.nvm",
                "python.pythonPath": "/usr/local/bin/python",
                "python.languageServer": "Default",
                "python.formatting.provider": "black",
                "python.formatting.blackPath": "/usr/local/bin/black",
                "python.linting.pylintPath": "/usr/local/bin/pylint",
                "python.testing.pytestPath": "/usr/local/bin/pytest",
                "python.analysis.typeCheckingMode": "basic",
                "python.testing.pytestArgs": [
                    "tests -v"
                ],
                "python.testing.unittestEnabled": false,
                "python.testing.pytestEnabled": true,
                "[python]": {
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": true
                    }
                }
            }
		}
	}

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
